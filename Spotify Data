
#For this project, I obtained Spotify data from Kaggle, establishing a structured table to seamlessly integrate and organize the dataset. 
#Subsequently, I conducted in-depth analytics on the Spotify data using SQL to derive valuable insights and patterns. 
#This process allowed for a comprehensive examination of the dataset, paving the way for a more informed and data-driven approach in understanding Spotify's dynamics.


CREATE TABLE BIT_DB.Spotifydata(
id integer PRIMARY KEY,
artist_name vachar NOT NULL,
track_name vachar NOT NULL,
track_id vachar NOT NULL,
popularity integer NOT NULL,
danceability decimal (4,3) NOT NULL,
energy decimal (4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal (5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal (5,4) NOT NULL,
acousticness decimal (6,5) NOT NULL,
instrumentalness decimal (8,7) NOT NULL,
liveness decimal (5,4) NOT NULL,
valence decimal (4,3) NOT NULL,
tempo decimal (6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL)
;


#Then I inserted the Spotify data. csv into the newly created table in the database
#Next I analyzed the data using the following SQL 

SELECT *
FROM BIT_DB.Spotifydata
;


---QUESTIONS--- 
/*What are the Top ten songs and artstis based on popularity?*/

SELECT artist_name as artist, track_name as songs
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIt 10


/*Which is the most popular artist*/
SELECT artist_name as most_popular_artist
FROM BIT_DB.Spotify_data
ORDER BY popularity DESC
LIMIT 1
;


/*Which songs have the most danceability*/
SELECT track_name, danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC
LIMIT 10
;


/*What is the average danceability of top 10 songs*/
SELECT AVG (danceability)
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10
;

/*which artist relesed the longest song*/
SELECT artist_name,track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata
;

/*What is the average danceability by artist and track? */
SELECT artist_name, AVG( danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG (danceability) DESC
;

/*how many times an artist appeared in the SPotify list */
SELECT distinct artist_name, COUNT ( id) 
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY COUNT(id) DESC

----Using Common Table Expression (CTE)-------
/*Calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.*/

WITH popularity_aveg_CTE AS (
SELECT s.artist_name, 
AVG(s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name
)
SELECT artist_name, average_popularity, 'Top Star' AS tag
FROM popularity_aveg_CTE 
WHERE average_popularity >= 90
;


